DEFINE_ACTION_FUNCTION install_component
BEGIN
  ACTION_IF NOT FILE_EXISTS "%MOD_FOLDER%/installed/%component_name%.mrk"
  BEGIN
    PRINT "Installing component %component_name%...."


    // File to detect this component.

    COPY "%MOD_FOLDER%/dummy.mih" "%MOD_FOLDER%/installed/%component_name%.mrk"


    // Load translation file if it exists.

    ACTION_IF FILE_EXISTS "%LANGUAGE%/%component_name%/setup.tra"
    BEGIN
      PRINT "Loading translations from %LANGUAGE%/%component_name%/setup.tra"

      LOAD_TRA "%LANGUAGE%/%component_name%/setup.tra"
    END


    // Run command file, or fail if it's missing.

    ACTION_IF FILE_EXISTS "%MOD_FOLDER%/components/%component_name%.tpa"
    BEGIN
      PRINT "Executing command file %MOD_FOLDER%/components/%component_name%.tpa"

      INCLUDE "%MOD_FOLDER%/components/%component_name%.tpa"
    END
    ELSE
    BEGIN
      FAIL "Command file %MOD_FOLDER%/components/%component_name%.tpa not found!"
    END
  END
  ELSE
  BEGIN
    PRINT "Component %component_name% already installed, skipping..."
  END
END


DEFINE_ACTION_FUNCTION compile_dialog_or_script
  STR_VAR
  path_to_file		= "dummy"
BEGIN
  OUTER_PATCH_SAVE path_to_tra "%path_to_file%"
  BEGIN
    REPLACE_TEXTUALLY CASE_INSENSITIVE EVALUATE_REGEXP "^%MOD_FOLDER%" "%MOD_FOLDER%/tra/%LANGUAGE%"
    REPLACE_TEXTUALLY CASE_INSENSITIVE EVALUATE_REGEXP "\.baf$" ".tra"
    REPLACE_TEXTUALLY CASE_INSENSITIVE EVALUATE_REGEXP "\.d$" ".tra"
  END

  ACTION_IF NOT FILE_EXISTS "%path_to_tra%"
  BEGIN
    OUTER_TEXT_SPRINT path_to_tra "%MOD_FOLDER%/dummy.tra"
  END

  COMPILE EVALUATE_BUFFER "%path_to_file%"
    PATCH_IF ENGINE_IS "bg1 totsc"
    BEGIN
      // BG1 compatibility hacks
//      LAUNCH_PATCH_MACRO bg1_token_replacements
      REPLACE_TEXTUALLY CASE_SENSITIVE EXACT_MATCH "MYAREA" "GLOBAL"
      REPLACE_TEXTUALLY CASE_SENSITIVE EXACT_MATCH "FaceObject(" "//FaceObject("
      REPLACE_TEXTUALLY CASE_SENSITIVE EXACT_MATCH "EraseJournalEntry(" "//EraseJournalEntry("
      REPLACE_TEXTUALLY CASE_SENSITIVE EXACT_MATCH "DestroyGold(" "//DestroyGold("
      REPLACE_TEXTUALLY CASE_SENSITIVE EXACT_MATCH "UNSOLVED_JOURNAL" "JOURNAL"
      REPLACE_TEXTUALLY CASE_SENSITIVE EXACT_MATCH "SOLVED_JOURNAL" "JOURNAL"
      REPLACE_TEXTUALLY CASE_SENSITIVE EXACT_MATCH "RestParty()" "ClearAllActions()
StartCutSceneMode()
CutSceneId(Player1)
FadeToColor([20.0],0)
Wait(5)
Rest()
ActionOverride(Player2,Rest())
ActionOverride(Player3,Rest())
ActionOverride(Player4,Rest())
ActionOverride(Player5,Rest())
ActionOverride(Player6,Rest())
Wait(10)
FadeFromColor([20.0],0)
Wait(1)
EndCutSceneMode()"
    END

    USING "%path_to_tra%"
END


DEFINE_ACTION_FUNCTION erase_journal_entries_on_bg2_transition
  STR_VAR
  dialog	= "dummy"
BEGIN
  ACTION_IF GAME_IS "bgt" AND FILE_EXISTS_IN_GAME "aram00.bcs"
  BEGIN
    COPY_EXISTING - "%dialog%.dlg" "%MOD_FOLDER%/work"
      GET_OFFSET_ARRAY trans_array 0x0014 4 0x0010 4 0 0 0x0020
      PHP_EACH trans_array AS int => trans_offset
      BEGIN
        PATCH_IF (LONG_AT (trans_offset) & BIT4)
	BEGIN
	  READ_SLONG (trans_offset + 0x0008) strref
	  PATCH_IF strref > 0
	  BEGIN
	    DEFINE_ASSOCIATIVE_ARRAY journal_entries
	    BEGIN
	      "%strref%" => "1"
	    END
	  END
	END
      END

    COPY_EXISTING "aram00.bcs" "override"
    DECOMPILE_AND_PATCH
    BEGIN
      PHP_EACH journal_entries AS strref => int
      BEGIN
        REPLACE_TEXTUALLY CASE_SENSITIVE EXACT_MATCH
	~SetGlobal("A6StartARAM00","ARAM00",10)~
	~SetGlobal("A6StartARAM00","ARAM00",10)
	 EraseJournalEntry(%strref%)~
      END
    END
  END
END


